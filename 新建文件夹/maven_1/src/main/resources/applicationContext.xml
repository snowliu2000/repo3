<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/aop
			    http://www.springframework.org/schema/aop/spring-aop.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd
			    http://www.springframework.org/schema/mvc
			    http://www.springframework.org/schema/mvc/spring-mvc.xsd">



    <!--dao层配置文件开始-->

<!--读取配置文件-->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
    <!--配置连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
<!--配置生产sqlsession工厂的对象-->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <!--扫描pojo包下所有pojo起别名-->
    <property name="typeAliasesPackage" value="com.itheima.domain"></property>
 <!--   &lt;!&ndash;单独配置mapper.xml，可以让mapper.xml和dao接口不在同一包下&ndash;&gt;
    <property name="mapperLocations" value="classpath:cn/itcast/mapper/*Dao.xml"></property>-->
</bean>

<!--扫描接口包路径，生成包下所有接口代理对象，并且放入spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.itheima.dao"></property>
    </bean>

    <!--dao层配置文件结束-->
    
    
    <!--service业务层配置文件开始-->

    <!--组件扫描配置-->
<context:component-scan base-package="com.itheima.service"></context:component-scan>

    <!--面向切面编程，切面就是切入点和通知的组合-->

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<tx:advice id="advice">
    <tx:attributes>
        <tx:method name="save*" propagation="REQUIRED"/>
        <tx:method name="delete*" propagation="REQUIRED"/>
        <tx:method name="update*" propagation="REQUIRED"/>
        <tx:method name="find*" read-only="true"/>
        <tx:method name="*" propagation="REQUIRED"/>
    </tx:attributes>
</tx:advice>


    <aop:config>
      <aop:pointcut id="pointcut" expression="execution(* com.itheima.service.impl.*.*(..))"></aop:pointcut>
        <aop:advisor advice-ref="advice" pointcut-ref="pointcut" ></aop:advisor>
    </aop:config>


    <!--配置事务-->



    <!--service配置文件结束-->







<!--  &lt;!&ndash;在main文件夹下的resources包的下面创建applicationContext.xml&ndash;&gt;
    &lt;!&ndash;首先整合mybatis,创建连接池对象&ndash;&gt;
    <bean id="" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql:///maven"></property>
        <property name="username" value="root"></property>
        <property name="password" value="600427"></property>

    </bean>
    &lt;!&ndash;创建sqlsessionFactory&ndash;&gt;
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <property name="typeAliasesPackage" value="com.itheima.domain"></property>
</bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.itheima.dao"></property>
    </bean>

   <context:component-scan base-package="com.itheima.service"></context:component-scan>
    <bean id="" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<tx:advice id="advice">
    <tx:attributes>
        <tx:method name="save*" propagation="REQUIRED"/>
    </tx:attributes>
</tx:advice>
    <aop:config>
        <aop:advisor advice-ref="advice" pointcut="execution(* com.itheima.service.impl.*.*(..))"></aop:advisor>
    </aop:config>-->


    <!--扫面接口-->
    <!--创建事务-->
    <!--创建通知(通知包括切面和切入点)-->








</beans>


